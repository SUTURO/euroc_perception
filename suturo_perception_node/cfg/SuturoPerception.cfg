#!/usr/bin/env python
# dynamic configuration for suturo perception
PACKAGE = "suturo_perception_node"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("numThreads", int_t, 0, "Number of processing threads", 8, 1, 32)
gen.add("zAxisFilterMin", double_t, 0, "Z-Axis Filter Minimum", 0.0, -10.0, 20.0)
gen.add("zAxisFilterMax", double_t, 0, "Z-Axis Filter Maximum", 1.5, 0.5, 4.0)
gen.add("downsampleLeafSize", double_t, 0, "Leaf size for cloud downsampling", 0.01, 0.0001, 1.0)
gen.add("planeMaxIterations", int_t, 0, "Maximum Number of iterations for plane fitting", 1000, 100, 10000)
gen.add("planeDistanceThreshold", double_t, 0, "Distance threshold for plane fitting segmentation", 0.005, 0.001, 1.0)
gen.add("ecClusterTolerance", double_t, 0, "Euclidian clustering tolerance for single cluster extraction", 0.01, 0.001, 1.0)
gen.add("ecMinClusterSize", int_t, 0, "Euclidian clustering minimum size for single cluster extraction", 6000, 100, 30000)
gen.add("ecMaxClusterSize", int_t, 0, "Euclidian clustering maximum size for single cluster extraction", 200000, 50000, 500000)
gen.add("prismZMin", double_t, 0, "Extract polygonal prism height limit minimum", 0.002, -10.000, 10.0)
gen.add("prismZMax", double_t, 0, "Extract polygonal prism height limit maximum", 0.50, -10.01, 20.0)
gen.add("ecObjClusterTolerance", double_t, 0, "Euclidian clustering tolerance for object cluster extraction", 0.03, 0.001, 1.0)
gen.add("ecObjMinClusterSize", int_t, 0, "Euclidian clustering minimum size for object cluster extraction", 100, 10, 3000)
gen.add("ecObjMaxClusterSize", int_t, 0, "Euclidian clustering maximum size for object cluster extraction", 25000, 10000, 200000)



size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
                  gen.const("Medium", int_t, 1, "A medium constant"),
                  gen.const("Large", int_t, 2, "A large constant"),
                  gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
                  "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "suturo_perception_node", "SuturoPerceptionNode"))
